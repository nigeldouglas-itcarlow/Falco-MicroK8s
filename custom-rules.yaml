customRules:
  custom-rules.yaml: |-
    - rule: Outbound Connection to C2 Servers
      desc: Detect outbound connection to command & control servers thanks to a list of IP addresses & a list of FQDN.
      condition: outbound and fd.sip in (c2_server_ip_list)
      output: Outbound connection to C2 server (c2_domain=%fd.sip.name c2_addr=%fd.sip c2_port=%fd.sport command=%proc.cmdline connection=%fd.name user=%user.name user_loginuid=%user.loginuid container_id=%container.id image=%container.image.repository)
      priority: WARNING
      tags: [host, container, network, mitre_command_and_control, TA0011]

    - macro: outbound
      condition: >
        (((evt.type = connect and evt.dir=<) or
          (evt.type in (sendto,sendmsg) and evt.dir=< and
          fd.l4proto != tcp and fd.connected=false and fd.name_changed=true)) and
        (fd.typechar = 4 or fd.typechar = 6) and
        (fd.ip != "0.0.0.0" and fd.net != "127.0.0.0/8" and not fd.snet in (rfc_1918_addresses)) and
        (evt.rawres >= 0 or evt.res = EINPROGRESS))

    - macro: proc_name_exists
      condition: (proc.name!="<NA>" and proc.name!="" and proc.name exists)

    - list: c2_server_ip_list
      items:
        - "'52.21.188.179'"
        - "'54.237.103.220'"
      override:
        items: append

    - list: rfc_1918_addresses
      items: ['"10.0.0.0/8"', '"172.16.0.0/12"', '"192.168.0.0/16"']
      override:
        items: append

    - list: falco_containers
      items: ["docker.io/issif/falco-talon"]
      override:
        items: append

    - list: white_listed_modules
      items: []

    # Disabling noisy Falco rules
    - rule: Drop and execute new binary in container
      enabled: false
      override:
        enabled: replace

    - rule: Change thread namespace
      enabled: false
      override:
        enabled: replace

    # Disabling rules with weak tagging
    - rule: Create Privileged Pod
      enabled: false
      override:
        enabled: replace

    - rule: Clear Log Activities
      enabled: false
      override:
        enabled: replace

    # Enabling rules with OWASP T10 Context
    - rule: Privileged Pod Created
      desc: Detect an attempt to start a pod with a privileged container
      condition: kevt and pod and kcreate and ka.req.pod.containers.privileged intersects (true) and not ka.req.pod.containers.image.repository in (falco_privileged_images)
      output: Pod started with privileged container (user=%ka.user.name pod=%ka.resp.name resource=%ka.target.resource ns=%ka.target.namespace images=%ka.req.pod.containers.image)
      priority: WARNING
      source: k8s_audit
      tags: [OWASP_K8S_T10, K01, insecure_workload_config, K01.03]

    - macro: containerd_activities
      condition: (proc.name=containerd and (fd.name startswith "/var/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/" or
                                            fd.name startswith "/var/lib/containerd/tmpmounts/"))                       

    - rule: Log Activity Removed
      desc: Detect clearing of critical access log files, typically done to erase evidence that could be attributed to an adversary actions.
      condition: >
        open_write
        and access_log_files
        and evt.arg.flags contains "O_TRUNC"
        and not containerd_activities
        and not trusted_logging_images
        and not allowed_clear_log_files
      output: Log files were tampered (file=%fd.name evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty %container.info)
      priority: WARNING
      tags: [OWASP_K8S_T10, K05, inadequate_logging, mitre_defense_evasion, T1070, NIST_800-53_AU-10]

    # https://github.com/falcosecurity/rules/blob/main/rules/falco-sandbox_rules.yaml#L1598,L1612
    - rule: Container Run as Root User
      desc: Container detected running as the root user. This should be taken into account especially when policies disallow containers from running with root user privileges.
      condition: spawned_process and container and proc.vpid=1 and user.uid=0 and not user_known_run_as_root_container
      enabled: true
      output: Container launched with root user privilege (evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: INFO
      tags: [OWASP_K8S_T10, K01, insecure_workload_config, K01.01]

    - rule: Pod created without read-only file system
      desc: Detect a pod created without a read-only file system
      condition: kevt and pod and kcreate and ka.req.pod.containers.read_only_fs intersects (true)
      output: Pod started without a read-only file system (user=%ka.user.name pod=%ka.resp.name resource=%ka.target.resource ns=%ka.target.namespace images=%ka.req.pod.containers.image)
      priority: INFO
      source: k8s_audit
      tags: [OWASP_K8S_T10, K01, insecure_workload_config, K01.02]

    # https://owasp.org/www-project-kubernetes-top-ten/2022/en/src/K04-policy-enforcement
    - rule: Nsenter Launched in Privileged Container
      desc: Detect file system debugger nsenter launched inside a privileged container which might lead to container escape. This rule has a more narrow scope.
      condition: >
        spawned_process
        and container
        and container.privileged=true
        and proc.name=nsenter
      output: Nsenter launched started in a privileged container (evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty exe_flags=%evt.arg.flags %container.info)
      priority: WARNING
      tags: [OWASP_K8S_T10, K04, central_policy_enforcement, K04.01, mitre_privilege_escalation, T1611]

    - rule: Attach to cluster-admin Role
      source: k8s_audit
      tags: [k8s, OWASP_K8S_T10, K03, overly_permissive_rbac, K03.01]
      override:
        tags: replace

    - rule: Ingress Object without TLS Certificate Created
      source: k8s_audit
      tags: [k8s, network, OWASP_K8S_T10, K06, broken_authentication, K06.04]
      override:
        tags: replace

    - rule: Create Sensitive Mount Pod
      source: k8s_audit
      tags: [k8s, OWASP_K8S_T10, K01, insecure_workload_config, K01.05]
      override:
        tags: replace

    - rule: Log Activity Removed
      source:
      tags: [OWASP_K8S_T10, K05, inadequate_logging, K05.01, mitre_defense_evasion, T1070, NIST_800-53_AU-10]
      override:
        tags: replace

    - rule: List Service Account Secrets
      desc: Detects listing of service account secrets.
      condition: proc.name contains ls and proc.cmdline contains /var/run/secrets/kubernetes.io/serviceaccount
      output: List command detected for listing service account secrets (user=%user.name shell=%proc.name cmdline=%proc.cmdline)
      priority: NOTICE
      tags: [OWASP_K8S_R10, K08, secrets_management]
